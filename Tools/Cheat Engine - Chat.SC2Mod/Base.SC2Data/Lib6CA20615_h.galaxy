include "TriggerLibs/NativeLib"

//--------------------------------------------------------------------------------------------------
// Library: Cheat Engine
//--------------------------------------------------------------------------------------------------
// Preset Declarations
const int lib6CA20615_ge_ClearSelectionSpawnPanel_Units = 0;
const int lib6CA20615_ge_ClearSelectionSpawnPanel_Structure = 1;

// Constants
const int lib6CA20615_gv_sIZE_SELECT_RACE_BUTTON = 60;
const int lib6CA20615_gv_kEY_OPEN_PANELS_ALT = c_keyModifierStateRequire;
const int lib6CA20615_gv_kEY_OPEN_PANELS_SHIFT = c_keyModifierStateIgnore;
const int lib6CA20615_gv_kEY_OPEN_PANELS_CTRL = c_keyModifierStateIgnore;
const int lib6CA20615_gv_cOUNT_BUTTONS = 64;
const string lib6CA20615_gv_unitsBuffer = "CheatEngine.unit";
const string lib6CA20615_gv_unitsStatsBuffer = "CheatEngine.unitstats";
const string lib6CA20615_gv_unitsOrientationBuffer = "CheatEngine.unitorientation";

// Structures
struct lib6CA20615_gs_button {
    int lv_btn;
    string lv_abil;
};

struct lib6CA20615_gs_Cheat_Alliance {
    int lv_alliance_P1;
    int lv_alliance_P2;
    string lv_alliance_AspectType;
    bool lv_alliance_OneShot;
};

struct lib6CA20615_gs_Cheat_DeathUnits {
    string lv_deathUnits_unitgroup;
    string lv_deathUnits_Players;
    int lv_deathUnits_MaxUnits;
    bool lv_deathUnits_IsRemove;
    playergroup lv_lastPlayerGroup;
};

struct lib6CA20615_gs_Cheat_SpawnUnits {
    string lv_spawnUnit_LastCreatedUnitType;
    bool lv_spawnUnit_Birth;
    int lv_spawnUnit_Player;
    int lv_spawnUnit_Amount;
};

struct lib6CA20615_gs_Player_Cheat {
    lib6CA20615_gs_Cheat_SpawnUnits lv_unitSpawn;
    lib6CA20615_gs_Cheat_DeathUnits lv_deathUnits;
    lib6CA20615_gs_Cheat_Alliance lv_alliance;
    bool lv_targetMode;
    string lv_unitType_Spawn;
    string lv_selectCategory1;
    string lv_selectCategory2;
    string lv_selectRace;
    fixed lv_mouseX;
    fixed lv_mouseY;
    int lv_ownerUnitSpawn;
};

struct lib6CA20615_gs_UI {
    int lv_spawn_Line1;
    int lv_spawn_Line2;
};

struct lib6CA20615_gs_ButtonSelectRace {
    int lv_button;
    string lv_race;
};

struct lib6CA20615_gs_ButtonsSpawn {
    int lv_button;
    int lv_icon;
    string lv_unit;
};

struct lib6CA20615_gs_ButtonsEditorCategories {
    int lv_button;
    int lv_icon;
    string lv_category;
};

struct lib6CA20615_gs_ButtonsRace {
    int lv_dialogItem;
    string lv_race;
};

// Variable Declarations
int lib6CA20615_gv_dialog;
lib6CA20615_gs_button[49] lib6CA20615_gv_button;
unit lib6CA20615_gv_caster;
int lib6CA20615_gv_abil;
int lib6CA20615_gv_kEY_OPEN_PANELS_SPAWNUNIT;
int lib6CA20615_gv_kEY_OPEN_PANELS_DATATABLEVIEW;
int lib6CA20615_gv_kEY_OPEN_PANELS_RACECHANGER;
int lib6CA20615_gv_cOUNT_CATEGORIES;
int lib6CA20615_gv_cOUNT_RACE;
int lib6CA20615_gv_cURRENT_SIZE_BUFFER;
int lib6CA20615_gv_mAXIMUM_SIZE_BUFFER;
string lib6CA20615_gv_dummyIcon;
lib6CA20615_gs_Player_Cheat[16] lib6CA20615_gv_player_Cheat;
lib6CA20615_gs_UI lib6CA20615_gv_uI;
lib6CA20615_gs_ButtonSelectRace[101] lib6CA20615_gv_buttonSelectRace;
int lib6CA20615_gv_frameSelectorRace;
lib6CA20615_gs_ButtonsSpawn[lib6CA20615_gv_cOUNT_BUTTONS + 1] lib6CA20615_gv_buttonsUnitSpawn;
lib6CA20615_gs_ButtonsSpawn[lib6CA20615_gv_cOUNT_BUTTONS + 1] lib6CA20615_gv_buttonsStructureSpawn;
lib6CA20615_gs_ButtonsRace[101] lib6CA20615_gv_buttonsRace;
unit lib6CA20615_gv_builderunit;
lib6CA20615_gs_ButtonsEditorCategories[51] lib6CA20615_gv_buttonEditorCategory1;
lib6CA20615_gs_ButtonsEditorCategories[51] lib6CA20615_gv_buttonEditorCategory2;
int lib6CA20615_gv_uispawner;
int lib6CA20615_gv_datatable_Window;
int[16] lib6CA20615_gv_nameDatatable;
int[16] lib6CA20615_gv_valueDatatable;
int lib6CA20615_gv_refreshdata_button;

// Function Declarations
void lib6CA20615_gf_updatespawnerui ();
void lib6CA20615_gf_ClearSelection (int lp_clearSelection, int lp_player);
bool lib6CA20615_gf_footprint1x1 (string lp_entry);
bool lib6CA20615_gf_footprint2x2 (string lp_entry);
bool lib6CA20615_gf_footprint3x3 (string lp_entry);
bool lib6CA20615_gf_footprint4x4 (string lp_entry);
bool lib6CA20615_gf_footprint5x5 (string lp_entry);
text lib6CA20615_gf_ConvertKeyToText (int lp_key);
string lib6CA20615_gf_ConvertKeyToString (int lp_key);
string lib6CA20615_gf_CheckEditorCategoriesObjectType (string lp_unit);
string lib6CA20615_gf_CheckEditorCategoriesObjectFamily (string lp_unit);
string lib6CA20615_gf_SearchIconForUnit (string lp_unit);
bool lib6CA20615_gf_UnitisBase (string lp_unit);
string lib6CA20615_gf_RaceOfUnitType (string lp_unitType);
string lib6CA20615_gf_RaceOfUnit (unit lp_unit);
unitgroup lib6CA20615_gf_ValueOfCheatUnitGroup (string lp_name);
playergroup lib6CA20615_gf_ValueOfCheatPlayerGroup (string lp_name);
void lib6CA20615_gf_Spawnunit (point lp_point, int lp_originPlayer, string lp_command);
void lib6CA20615_gf_DeathUnit (int lp_originPlayer, string lp_command);
void lib6CA20615_gf_ProgressUnit (int lp_originPlayer, string lp_command);
void lib6CA20615_gf_CopyUnit (int lp_origingplayer);
void lib6CA20615_gf_PasteUnit (int lp_origingplayer, point lp_spawnpoint, string lp_command);
void lib6CA20615_gf_Alliance (int lp_originPlayer, string lp_command);
string lib6CA20615_gf_StringIsUnitGrouppreset (string lp_string);
bool lib6CA20615_gf_StringIsPlayerGrouppreset (string lp_string);
bool lib6CA20615_gf_CharisInteger (string lp_char);
bool lib6CA20615_gf_StringIsPlayer (string lp_string);
bool lib6CA20615_gf_StringIsString (string lp_string);
bool lib6CA20615_gf_StringIsBool (string lp_string);
bool lib6CA20615_gf_StringIsInteger (string lp_string);
bool lib6CA20615_gf_StringIsReal (string lp_string);
string lib6CA20615_gf_SearchCheat (string lp_cheat);
string lib6CA20615_gf_CheatType (string lp_cheat);
string lib6CA20615_gf_CheckParametersForCheatnumber (string lp_cheat, string lp_command, int lp_index);

// Trigger Declarations
trigger lib6CA20615_gt_Test;
trigger lib6CA20615_gt_CastAbil;
trigger lib6CA20615_gt_SetAbil;
trigger lib6CA20615_gt_init;
trigger lib6CA20615_gt_CheatCodeUnits;
trigger lib6CA20615_gt_CheatCodePlayers;
trigger lib6CA20615_gt_InitSelectRace;
trigger lib6CA20615_gt_ChangeRace;
trigger lib6CA20615_gt_showspawneruiselectrace;
trigger lib6CA20615_gt_hidespawneruiselectrace;
trigger lib6CA20615_gt_InitSpawnUnit;
trigger lib6CA20615_gt_ReviveBuilder;
trigger lib6CA20615_gt_TargetModOff;
trigger lib6CA20615_gt_ChangeOwner;
trigger lib6CA20615_gt_ChangeCategory;
trigger lib6CA20615_gt_GenerateCategories;
trigger lib6CA20615_gt_showspawnerui;
trigger lib6CA20615_gt_hidespawnerui;
trigger lib6CA20615_gt_SelectRace;
trigger lib6CA20615_gt_ClickUnit;
trigger lib6CA20615_gt_ReplaceUnit;
trigger lib6CA20615_gt_hookdatatableview;
trigger lib6CA20615_gt_updatedata;
trigger lib6CA20615_gt_showdatatablewindow;
trigger lib6CA20615_gt_hidedatatablewindow;

// Library Initialization
void lib6CA20615_InitVariables ();

